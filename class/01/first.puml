@startuml
PaymentManager o-down- Payment : " manages"

abstract class Payment {
    -amount : BigDecimal
    -paymentDate : OffsetDateTime
    -transactionId : UUID
    +Payment(amount : BigDecimal, paymentDate : OffsetDateTime, transactionId : UUID)
    +setAmount(amount : BigDecimal) : void
    +setPaymentDate(paymentDate : OffsetDateTime) : void
    +getAmount() : BigDecimal
    +getPaymentDate() : OffsetDateTime
    +getTransactionId() : UUID
    +{abstract} processPayment() : void
}

class CashPayment extends Payment {
    -cashProvided : BigDecimal
    +CashPayment(amount : BigDecimal, paymentDate : OffsetDateTime, transactionId : UUID, cashProvided : BigDecimal)
    +setCashProvided(cashProvided : BigDecimal) : void
    +getCashProvided() : BigDecimal
    +processPayment() : void
    +calculateCharge() : BigDecimal
}

class CardPayment extends Payment {
    -cardNumber : String
    -ownerName : String
    -duration : long
    +CardPayment(amount : BigDecimal, paymentDate : OffsetDateTime, transactionId : UUID, cardNumber : String,
    ownerName : String, duration : long)
    +setCardNumber(cardNumber : String) : void
    +setOwnerName(ownerName : String) : void
    +setDuration(duration : long) : void
    +getCardNumber() : String
    +getOwnerName() : String
    +long getDuration() : long
    +processPayment() : void
    +validateCard() : boolean
}

class PaymentManager {
    -paymentList : List<Payment>
    +PaymentManager()
    +getPaymentList() : List<Payment>
    +addPayment(payment : Payment) : void
    +addPaymentList(paymentList : List<Payment>) : void
    +processAllPayments() : void
}
@enduml