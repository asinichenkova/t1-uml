@startuml

start

if ( УЗ существует ) then ( <color:green>да )
    -[#green]->
    :[клиент] войти в существующий аккаунт;
else ( <color:red>нет )
    -[#red]->
    :[клиент] зарегистрироваться;
end if
:[система] подтвердить учетные данные клиента;
repeat
    :[клиент] выбрать товары;
    :[клиент] добавить товары в корзину;
    if ( товар попадает под акцию? ) then ( <color:green>да )
        -[#green]->
        :[система] обновить сумму заказа с учетом скидки;
    else ( <color:red>нет )
        -[#red]->
    end if
repeat while ( [клиент] выбор товаров завершен? ) is ( <color:red>нет ) not ( <color:green>да ) -[#red]->
-[#green]->
while ( [клиент] ввести промокод? ) is ( <color:green>да )
    -[#green]->
    :[клиент] ввести промокод;
    if ( введен ошибочный промокод? ) then ( <color:red>да )
        -[#red]->
        :[система] вывести уведомление об\n ошибке ввода промокода;
    else ( <color:green>нет )
        :[система] проверить возможность применения промокода;
        if ( промокод применим? ) then ( <color:green>да )
            -[#green]->
            :[система] обновить сумму заказа с учетом скидки;
        else ( <color:red>нет )
            -[#red]->
            :[система] вывести уведомление о\nневозможности применения промокода;
        end if
    end if
end while ( <color:red>нет )
-[#red]->
:[клиент] перейти к оформлению заказа;
fork
    #lightblue/white :[система] изменить статус заказа на "Сформирован";
    :[система] отправить клиенту уведомление\nоб изменении статуса заказа;
fork again
    :[клиент] выбрать способ доставки;
end fork
:[система] проверить наличие выбранных\nтоваров в указанном количестве;
if ( товары в наличии? ) then ( <color:red>нет )
    -[#red]->
    :[система] сформировать уведомление\nо недоступности товаров;
    switch ( [клиент] выбрать дальнейшее действие )
        case (  <color:red>удалить\n  <color:red>отсутствующую\n  <color:red>позицию )
            :[система] исключить отсутствующую\nпозицию из заказа;
        case (  \n  <color:green>выбрать\n  <color:green>альтернативный\n  <color:green>товар)
            :[система] отобразить товары\nиз аналогичной категории;
            :[клиент] выбрать товар;
            :[клиент] добавить товар в корзину;
            if ( товар попадает под акцию? ) then ( <color:green>да )
                -[#green]->
                :[система] обновить сумму заказа с учетом скидки;
            else ( <color:red>нет )
                -[#red]->
            end if
            :[клиент] вернуться к оформлению заказа;
        case (  оставить заказ в\n  ожидании поступления\n  товара)
            repeat
                :[система] проверить наличие товара;
            repeat while ( товар поступил? ) is ( <color:red>нет ) not ( <color:green>да ) -[#red]->
            -[#green]->
            if ( товар попадает под акцию? ) then ( <color:green>да )
                -[#green]->
                :[система] обновить сумму заказа с учетом скидки;
            else ( <color:red>нет )
                -[#red]->
            end if
            :[система] сформировать уведомление\nо поступлении товара;
            :[клиент] вернуться к оформлению заказа;
    endswitch
else ( <color:green>да )
    -[#green]->
    :[система] забронировать товары;
end if
fork
    repeat
        :[клиент] выбрать способ оплаты;
        :[клиент] ввести платежные реквизиты;
        :[система] проверить формат платежных реквизитов;
    repeat while ( корректный формат? ) is ( <color:red>нет ) not ( <color:green>да ) -[#red]->
    -[#green]->
    :[система] провести транзакцию;
fork again
    :[система] сформировать уведомление\nо необходимости подготовки заказа;
    :[сотрудник склада] укомплектовать заказ;
end fork
while ( оплата не прошла? ) is ( <color:red>да )
    -[#red]->
    if ( недостаточно средств? ) then ( <color:red>да )
        -[#red]->
        :[система] сформировать\nуведомление о\nнехватке средств;
        if ( [клиент] выбрать дальнейшее действие ) then ( <color:green>изменить\n <color:green>способ\n <color:green>оплаты )
            repeat
                :[клиент] выбрать способ оплаты;
                :[клиент] ввести платежные реквизиты;
                :[система] проверить формат\nплатежных реквизитов;
            repeat while ( корректный формат? ) is ( <color:red>нет ) not ( <color:green>да ) -[#red]->
            -[#green]->
            :[система] провести транзакцию;
        else ( <color:red>отказаться от\n <color:red>оформления заказа )
            -[#red]->
            :[система] снять бронь с товаров;
            :[система] удалить заказ;
            if ( средства клиенты списаны? ) then ( <color:red>да )
                -[#red]->
                :[система] вернуть средства клиента;
            else ( <color:green>нет )
                -[#green]->
            end if
            stop
            note right
                клиент отказался
                от оформления заказа
                из-за нехватки средств
            end note
        end if
    elseif ( недоступна платежная система? ) then ( <color:red>да )
        -[#red]->
        :[система] сформировать\nуведомление о недоступности\nплатежной системы;
        switch ( [клиент] выбрать дальнейшее действие )
            case ( <color:green>повторить\n <color:green>попытку\n <color:green>оплаты )
                -[#green]->
                :[система] провести транзакцию;
            case ( \n <color:green>изменить\n <color:green>способ\n <color:green>оплаты)
                repeat
                    :[клиент] выбрать способ оплаты;
                    :[клиент] ввести платежные реквизиты;
                    :[система] проверить формат\nплатежных реквизитов;
                repeat while ( корректный формат? ) is ( <color:red>нет ) not ( <color:green>да ) -[#red]->
                -[#green]->
                :[система] провести транзакцию;
            case ( <color:red>отказаться от\n <color:red>оформления заказа )
                -[#red]->
                :[система] снять бронь с товаров;
                :[система] удалить заказ;
                if ( средства клиенты списаны? ) then ( <color:red>да )
                    -[#red]->
                    :[система] вернуть средства клиента;
                else ( <color:green>нет )
                    -[#green]->
                end if
                stop
                note right
                    клиент отказался
                    от оформления заказа
                    из-за недоступности
                    платежной системы
                end note
        endswitch
    elseif ( ошибка в платежных данных? ) then ( <color:red>да )
        -[#red]->
        :[система] сформировать\nуведомление об ошибке\nв платежных данных;
        if ( [клиент] выбрать дальнейшее действие ) then ( <color:green>изменить\n <color:green>платежные\n <color:green>реквизиты )
            -[#green]->
            repeat
                :[клиент] ввести платежные реквизиты;
                :[система] проверить формат\nплатежных реквизитов;
            repeat while ( корректный формат? ) is ( <color:red>нет ) not ( <color:green>да ) -[#red]->
            -[#green]->
            :[система] провести транзакцию;
        else ( <color:red>отказаться от\n <color:red>оформления заказа )
            -[#red]->
            :[система] снять бронь с товаров;
            :[система] удалить заказ;
            if ( средства клиенты списаны? ) then ( <color:red>да )
                -[#red]->
                :[система] вернуть средства клиента;
            else ( <color:green>нет )
                -[#green]->
            end if
            stop
            note right
                клиент отказался
                от оформления заказа
                из-за ошибки в
                платежных реквизитах
            end note
        end if
    end if
end while ( <color:green>нет )
-[#green]->
#lightblue/white :[система] изменить статус заказа на "Оплачен";
note right
    клиент успешно оформил
    и оплатил заказ
end note
:[система] отправить клиенту уведомление\nоб изменении статуса заказа;
:[система] сформировать счет-фактуру;
:[система] сформировать уведомление о\nподтверждении заказа и статусе доставки;
#lightblue/white :[система] изменить статус заказа на "Отправлен";
:[система] отправить клиенту уведомление\nоб изменении статуса заказа;
repeat
    :[система] проверить статус доставки\nтовара в транспортной компании;
repeat while ( заказ доставлен? ) is ( <color:red>нет ) not ( <color:green>да ) -[#red]->
-[#green]->
#lightblue/white :[система] изменить статус заказа на "Доставлен";
:[система] отправить клиенту уведомление\nоб изменении статуса заказа;
stop
note right
    клиент успешно
    получил заказ
end note

@enduml